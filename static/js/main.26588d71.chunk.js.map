{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","userId","completed","TodoList","todos","map","todosFull","usersFromServer","find","App","useState","setTitle","setUser","isUserSelected","setUserSelected","isTitleSelected","setTitleSelected","setTodos","window","console","log","action","method","onSubmit","event","preventDefault","prevTodo","newId","Math","max","obj","newUser","userName","addTodo","type","value","onChange","target","disabled","userS","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26588d71.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ninterface UserInfoProps {\n  user: User;\n}\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface TodoInfoProps {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  const {\n    title,\n    user,\n    userId,\n    completed,\n  } = todo;\n\n  return (\n    <article className={`TodoInfo ${completed ? 'TodoInfo--completed' : ''}`}>\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} key={userId} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface TodoListProps {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => <TodoInfo key={todo.id} todo={todo} />)}\n\n      {/* <article data-id=\"15\" className=\"TodoInfo TodoInfo--completed\">\n        <h2 className=\"TodoInfo__title\">delectus aut autem</h2>\n\n        <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n          Leanne Graham\n        </a>\n      </article>\n\n      <article data-id=\"2\" className=\"TodoInfo\">\n        <h2 className=\"TodoInfo__title\">\n          quis ut nam facilis et officia qui\n        </h2>\n\n        <a className=\"UserInfo\" href=\"mailto:Julianne.OConner@kory.org\">\n          Patricia Lebsack\n        </a>\n      </article> */}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todosFull: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState('');\n  const [isUserSelected, setUserSelected] = useState(true);\n  const [isTitleSelected, setTitleSelected] = useState(true);\n  const [todos, setTodos] = useState(todosFull);\n\n  const handleTitle: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    setTitle(event.target.value);\n    setTitleSelected(true);\n  };\n\n  const handleUserChange: React.ChangeEventHandler<HTMLSelectElement> = (\n    event,\n  ) => {\n    setUserSelected(true);\n    setUser(event.target.value);\n  };\n\n  const clearFormFields = () => {\n    setTitle('');\n    setUser('');\n  };\n\n  const handleSubmit: React.ChangeEventHandler<HTMLFormElement> = (event) => {\n    event.preventDefault();\n    if (!title || !user) {\n      setTitleSelected(false);\n      setUserSelected(false);\n\n      return;\n    }\n\n    setTodos(prevTodo => {\n      const newId = Math.max(...prevTodo.map(obj => obj.id)) + 1;\n      const newUser = usersFromServer\n        .find(userName => userName.name === user);\n\n      if (!newUser) {\n        return [...todos];\n      }\n\n      const addTodo = {\n        id: newId,\n        title,\n        completed: false,\n        userId: newUser.id,\n        user: newUser,\n      };\n\n      return [...todos, addTodo];\n    });\n\n    clearFormFields();\n  };\n\n  window.console.log('todos:', todos);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitle}\n          />\n          {!isTitleSelected\n            && (\n              <span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={user}\n            onChange={handleUserChange}\n            id={user}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n            {usersFromServer.map(userS => {\n              const { id, name } = userS;\n\n              return (\n                <option key={id} id={name}>\n                  {name}\n                </option>\n              );\n            })}\n          </select>\n\n          {!isUserSelected && (\n            <span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}